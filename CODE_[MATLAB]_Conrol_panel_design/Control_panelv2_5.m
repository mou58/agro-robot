function [] = Control_panelv2_5()
clear
close all
s = serial('COM9','BaudRate',9600,'DataBits',8);
fopen(s);
pause(2)
header1 = 'Datum ';
header2 = 'Time';
temp3 = 'Temperature';
tempt=fopen('Temperature.txt','w');
fprintf(tempt, [ header1 ' ' header2 ' ' temp3 '\r\n']);
fclose(tempt);
hum3 = 'Humidity';
humt=fopen('Humidity.txt','w');
fprintf(humt, [ header1 ' ' header2 ' ' hum3 '\r\n']);
fclose(humt);
S.control = figure('units','pixels',...
              'position',[180 80 1000 650],...
              'menubar','none',...
              'numbertitle','off',...
              'name','Control_panel',...
              'resize','off'); 

notice = uipanel('Title','Result','FontSize',10,...
             'unit','pix',...  
             'Position',[700 1 300 255]);
control = uipanel('Title','Manual control','FontSize',10,...
             'unit','pix',...  
             'Position',[2 1 465 250]);
Robot_control=uipanel(control,'Title','Robot Control','FontSize',10,...
             'unit','pix',...  
             'Position',[1 1 300 200]);
hand_control=uipanel(control,'Title','ARM Control','FontSize',10,...
             'unit','pix',...  
             'Position',[300 1 165 200]);
Display_p= uipanel('Title','Display','FontSize',10,...
             'unit','pix',...  
             'Position',[550 280 465 370]);
%Display
Display= axes('Parent',Display_p,'units','pixels',...
            'position',[1 50 448 320]);      
set(Display,'xtick',[],'ytick',[])  % Get rid of ticks.
 set(Display,'Visible','off'); 
%live Video Display
Live_p= uipanel('Title','Live','FontSize',10,...
             'unit','pix',...  
             'Position',[1 280 465 370]);
Live= axes('Parent',Live_p,'units','pixels',...
            'position',[1 50 460 320]);
set(Live,'xtick',[],'ytick',[])  % Get rid of ticks.
 set(Live,'Visible','off'); 
%cam selection
Camera= uicontrol(Live_p,'style','push','FontSize',10,...
                 'unit','pix',...
                 'position',[30 10 80 30],...
                 'string','Cam',...
                 'backgroundColor','default',...
                 'fontweight','bold',...
                 'Callback',@sel_cam);
                        
%start button for live cam
start_cam= uicontrol( Live_p,'style','push','FontSize',10,...
                 'unit','pix',...
                 'position',[120 10 100 30],...
                 'fontweight','bold',...
                 'string','Start',...
                 'Callback',@Start_call);

%image capture button
capture= uicontrol(Live_p,'style','push','FontSize',10,...
                 'unit','pix',...
                 'position',[225 10 100 30],...
                 'fontweight','bold',...
                 'string','Capture',...
                 'Callback',@Capture_call);
%stop button for live cam
Stop= uicontrol(Live_p,'style','push','FontSize',10,...
                 'unit','pix',...
                 'position',[330 10 100 30],...
                 'fontweight','bold',...
                 'string','Stop',...
                 'Callback',@Stop_video);        
%stop button for live cam
process_im= uicontrol(Display_p,'style','push','FontSize',10,...
                 'unit','pix',...
                 'position',[15 10 110 30],...
                 'fontweight','bold',...
                 'string','Processed im',...
                 'Callback',@prosseced_image); 
%Show temp
Temperature= uicontrol(Display_p,'style','push','FontSize',10,...
                 'unit','pix',...
                 'position',[130 10 100 30],...
                 'fontweight','bold',...
                 'string','Temperature',...
                 'Callback',@temp); 
%Show Humitidy
Humidity= uicontrol(Display_p,'style','push','FontSize',10,...
                 'unit','pix',...
                 'position',[235 10 100 30],...
                 'fontweight','bold',...
                 'string','Humidity',...
                  'Callback',@hu);
%manual

%Show Soil Moisture
Moisture= uicontrol(Display_p,'style','push','FontSize',10,...
                 'unit','pix',...
                 'position',[340 10 100 30],...
                 'fontweight','bold',...
                 'string','Soil moisture',...
                 'callback',@soil_call);
%Robot operation sclection 
Automatic= uicontrol(control,'style','push','FontSize',10,...
                 'unit','pix',...
                 'position',[320 202 100 30],...
                 'fontweight','bold',...
                 'string','Automatic',...
                 'Callback',@auto_call);
             
semi_Automatic= uicontrol(control,'style','push','FontSize',10,...
                 'unit','pix',...
                 'position',[215 202 100 30],...
                 'fontweight','bold',...
                 'string','Semi Auto',...
                 'Callback',@semi_auto_call);
%manual
Manual= uicontrol(control,'style','push','FontSize',10,...
                 'unit','pix',...
                 'position',[110 202 100 30],...
                 'fontweight','bold',...
                 'string','Manual',...
                 'Callback',@manual_call);             
RForward= uicontrol(Robot_control,'style','push','FontSize',10,...
                 'unit','pix',...
                 'position',[98 125 100 40],...
                 'fontweight','bold',...
                 'string','Forward',...
                 'Callback',@robofor);
RStop= uicontrol(Robot_control,'style','push','FontSize',10,...
                 'unit','pix',...
                 'position',[115 85 70 30],...
                 'fontweight','bold',...
                 'string','STOP',...
                 'Callback',@robostop);
RBackward= uicontrol(Robot_control,'style','push','FontSize',10,...
                 'unit','pix',...
                 'position',[98 35 100 40],...
                 'fontweight','bold',...
                 'string','Reverse',...
                 'Callback',@roborev);
RLeft= uicontrol(Robot_control,'style','push','FontSize',10,...
                 'unit','pix',...
                 'position',[3 80 100 40],...
                 'fontweight','bold',...
                 'string','Left',...
                 'Callback',@robolef);
RRight= uicontrol(Robot_control,'style','push','FontSize',10,...
                 'unit','pix',...
                 'position',[193 80 100 40],...
                 'fontweight','bold',...
                 'string','Right',...
                 'Callback',@roborig);             
Rh1= uicontrol(hand_control,'style','slider',...
                 'unit','pix',...
                 'position',[16 5 25 180],...
                 'BackgroundColor','black');
Rh2= uicontrol(hand_control,'style','slider',...
                 'unit','pix',...
                 'position',[51 5 25 180],...
                 'BackgroundColor','blue',...
                 'string','base');
Rh3= uicontrol(hand_control,'style','slider',...
                 'unit','pix',...
                 'position',[86 5 25 180],...
                 'BackgroundColor','green',...
                 'string','base');
Rh4= uicontrol(hand_control,'style','slider',...
                 'unit','pix',...
                 'position',[121 5 25 180],...
                 'string','base',...
                 'BackgroundColor','red'); 
Rh1_c= uicontrol(hand_control,'style','radio',...
                 'unit','pix',...
                 'position',[16 7 25 15]);

Rh2_c= uicontrol(hand_control,'style','radio',...
                 'unit','pix',...
                 'position',[51 7 25 15]);

Rh3_c= uicontrol(hand_control,'style','radio',...
                 'unit','pix',...
                 'position',[86 7 25 15]); 
Rh4_c= uicontrol(hand_control,'style','radio',...
                 'unit','pix',...
                 'position',[121 7 25 15]);
%set notice board
Date_show=uicontrol(notice,'style','text','FontSize',14,...
                 'unit','pix',...
                 'position',[110 213 180 25],...
                 'FontWeight','bold',...
                 'ForegroundColor','white',...
                 'BackgroundColor','black');
date_text=uicontrol(notice,'style','text','FontSize',12,...
                 'unit','pix',...
                 'position',[1 213 100 25],...
                 'string','DATE',...
                 'ForegroundColor','white',...
                 'FontWeight','bold',...
                 'BackgroundColor','blue');             
S.clock= uicontrol(notice,'style','text',...
                 'unit','pix',...
                 'position',[110 183 180 25],...
                 'string',datestr(now,16),...
                 'backgroundc','black',...
                 'fontsize',14,...
                 'fontweight','bold',...
                 'foregroundcolor','white');
time=uicontrol(notice,'style','text','FontSize',12,...
                 'unit','pix',...
                 'position',[1 183 100 25],...
                 'string','TIME',...
                 'ForegroundColor','white',...
                 'FontWeight','bold',...
                 'BackgroundColor','blue');  
total_show= uicontrol(notice,'style','text','FontSize',12,...
                 'unit','pix',...
                 'position',[180 153 110 25],...
                 'FontWeight','bold',...
                 'ForegroundColor','white',...
                 'BackgroundColor','black');
Total_text= uicontrol(notice,'style','text','FontSize',12,...
                 'unit','pix',...
                 'position',[1 153 170 25],...
                 'string','Total Ripe Tomato:',...
                 'ForegroundColor','white',...
                 'FontWeight','bold',...
                 'BackgroundColor','blue');
location_text= uicontrol(notice,'style','text','FontSize',12,...
                 'unit','pix',...
                 'position',[1 123 140 25],...
                 'string','Tomato Location',...
                 'ForegroundColor','white',...
                 'FontWeight','bold',...
                 'BackgroundColor','blue');
location_show= uicontrol(notice,'style','text','FontSize',12,...
                 'unit','pix',...
                 'position',[150 123 140 25],...
                 'FontWeight','bold',...
                 'ForegroundColor','white',...
                 'BackgroundColor','black');
T_Wide_text= uicontrol(notice,'style','text','FontSize',12,...
                 'unit','pix',...
                 'position',[1 93 140 25],...
                 'string','Tomato Size',...
                 'ForegroundColor','white',...
                 'FontWeight','bold',...
                 'BackgroundColor','blue');
tomoto_wide= uicontrol(notice,'style','text','FontSize',12,...
                 'unit','pix',...
                 'position',[150 93 140 25],...
                  'ForegroundColor','white',...
                 'FontWeight','bold',...
                 'BackgroundColor','black');
temp_text= uicontrol(notice,'style','text','FontSize',12,...
                 'unit','pix',...
                 'position',[1 63 140 25],...
                 'string','Temperature',...
                 'ForegroundColor','white',...
                 'FontWeight','bold',...
                 'BackgroundColor','blue');
temp_show= uicontrol(notice,'style','text','FontSize',12,...
                 'unit','pix',...
                 'position',[150 63 140 25],...
                 'ForegroundColor','white',...
                 'FontWeight','bold',...
                 'BackgroundColor','black');
Humidity_text= uicontrol(notice,'style','text','FontSize',12,...
                 'unit','pix',...
                 'position',[1 33 140 25],...
                 'string','Humidity',...
                 'ForegroundColor','white',...
                 'FontWeight','bold',...
                 'BackgroundColor','blue');
Humidity_show= uicontrol(notice,'style','text','FontSize',12,...
                 'unit','pix',...
                 'position',[150 33 140 25],...
                 'ForegroundColor','white',...
                 'FontWeight','bold',...
                 'BackgroundColor','black');
Soil_Moisture_text= uicontrol(notice,'style','text','FontSize',12,...
                 'unit','pix',...
                 'position',[1 3 140 25],...
                 'string','Soil Moisture',...
                 'ForegroundColor','white',...
                 'FontWeight','bold',...
                 'BackgroundColor','blue');
Soil_Moisture_show= uicontrol(notice,'style','text','FontSize',12,...
                 'unit','pix',...
                 'position',[150 3 140 25],...
                 'ForegroundColor','white',...
                 'FontWeight','bold',...
                 'BackgroundColor','black');
set(Date_show,'String',datestr(date, 'mm/dd/yyyy'));
set(S.control ,'deletefcn',{@exit})
ab=0;
global tem;
global HUM;
global rip;
global location ;
global size ;
bk=0;
STRT = 60 - str2double(datestr(now,'MM')); % So we can update every minute.
tmr = timer('Name','Reminder',...
            'Period',60,...  % Update the time every 60 seconds.
            'StartDelay',STRT,... % In seconds.
            'TasksToExecute',inf,...  % number of times to update
            'ExecutionMode','fixedSpacing',...
            'TimerFcn',{@updater}); 
start(tmr);  % Start the timer object.
DATA = timer('Name','Reminder',...
            'Period',75,...  % Update the time every 60 seconds.
            'StartDelay',STRT,... % In seconds.
            'TasksToExecute',inf,...  % number of times to update
            'ExecutionMode','fixedSpacing',...
            'TimerFcn',{@DATA_CALL}); 
start(DATA);  % Start the timer object.
function [] = DATA_CALL(hObject, eventdata, handles)
fprintf(s,'%s\n','F')
pause(1)
tem = fscanf(s)
set(temp_show,'String',[tem,' ','C']);
A  = datestr(date, 'dd/mm/yyyy');
B = datestr(now,'HH:MM');
C = tem;
tempt=fopen('Temperature.txt','a');
fprintf(tempt, '%s %s', [ A ' ' B ' ' C ]);
fprintf(tempt,'\r\n' );
fclose(tempt);
fprintf(s,'%s\n','G')
pause(1)
HUM = fscanf(s)
set(Humidity_show,'String',[HUM,' ','%']);
A  = datestr(date, 'dd/mm/yyyy');
B = datestr(now,'HH:MM');
C = HUM;
humt=fopen('Humidity.txt','a');
fprintf(humt, '%s %s', [ A ' ' B ' ' C ]);
fprintf(humt,'\r\n' );
fclose(humt);
end
function [] = updater(hObject, eventdata, handles)
         try
 set(S.clock,'string',datestr(now,16))
fprintf(s,'%s\n','F')
pause(1)
tem = fscanf(s)
set(temp_show,'String',[tem,' ','C']);
A  = datestr(date, 'dd/mm/yyyy');
B = datestr(now,'HH:MM');
C = tem;
tempt=fopen('Temperature.txt','a');
fprintf(tempt, '%s %s', [ A ' ' B ' ' C ]);
fprintf(tempt,'\r\n' );
fclose(tempt);
fprintf(s,'%s\n','G')
pause(1)
HUM = fscanf(s)
set(Humidity_show,'String',[HUM,' ','%']);
A  = datestr(date, 'dd/mm/yyyy');
B = datestr(now,'HH:MM');
C = HUM;
humt=fopen('Humidity.txt','a');
fprintf(humt, '%s %s', [ A ' ' B ' ' C ]);
fprintf(humt,'\r\n' );
fclose(humt);
catch
end
end
function sel_cam(hObject, eventdata, handles)
% hObject    handle to sel_cam (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
% Open GUI to select the camera
sel_camera
% wait until
uiwait
% Bring the camera features
global id es_web_ext
handles.es_web_ext=es_web_ext;
handles.id=id;
if es_web_ext==0
    formato='YUY2_640x480';
    set(Camera,'backgroundcolor','green')
else
    formato='YUY2_720x480';
end
try
    % Create video object
    vid = videoinput('winvideo',id,formato); %#ok<NASGU>
catch
    msgbox('Check the connection of the camera','Camera')
end
end
function Start_call(hObject, eventdata, handles) 
Live= axes('Parent',Live_p,'units','pixels',...
            'position',[1 50 460 320]);
set(Live,'xtick',[],'ytick',[])  % Get rid of ticks.
global id es_web_ext
handles.es_web_ext=es_web_ext;
handles.id=id;
if es_web_ext==0
    formato='YUY2_640x480';
else
    formato='YUY2_720x480';
end
try
    % Create video object
    vid = videoinput('winvideo',id,formato);
catch
    msgbox('Check the connection of the camera','Camera')
end
set(Live,'xtick',[],'ytick',[])  % Get rid of ticks.
 set(Live,'Visible','off');        
set(vid, 'FramesPerTrigger', Inf);
set(vid, 'ReturnedColorspace', 'rgb')
vid.FrameGrabInterval = 5;

%start the video aquisition here
start(vid)
% Set a loop that stop after 100 frames of aquisition
ab=1;
while ab
    data = getsnapshot(vid);
    data = flipdim(data,2); % obtain the mirror image for displaying
    R=data(:,:,1);
    diff_im = imsubtract(R,rgb2gray(data));
    %Use a median filter to filter out noise
    diff_im = medfilt2(diff_im, [3 3]);
    % Convert the resulting grayscale image into a binary image.
    diff_im = im2bw(diff_im,0.2);
    
    % Remove all those pixels less than 300px
    diff_im = bwareaopen(diff_im,300);
    
    % Label all the connected components in the image.
    bw = bwlabel(diff_im, 8);
    
    % Here we do the image blob analysis.
    % We get a set of properties for each labeled region.
    stats = regionprops(bw, 'BoundingBox', 'Centroid'); %#ok<MRPBW>
imshow(data);

    hold on
    
    %This is a loop to bound the red objects in a rectangular box.
    for object = 1:length(stats)
        bb = stats(object).BoundingBox;
        bc = stats(object).Centroid;
        rectangle('Position',bb,'EdgeColor','r','LineWidth',2)
        plot(bc(1),bc(2), '-m+')
       
        location=strcat('X: ', num2str(round(bc(1))), '    Y: ', num2str(round(bc(2))));
        a=text(bc(1)+15,bc(2), strcat('X: ', num2str(round(bc(1))), '    Y: ', num2str(round(bc(2)))));
        set(a, 'FontName', 'Arial', 'FontWeight', 'bold', 'FontSize', 12, 'Color', 'yellow');
        %%
         %plot(bb(3),bb(4),'-m+')
         size=strcat('W: ', num2str(round(bb(3))), '    H: ', num2str(round(bb(4))));
         set(tomoto_wide,'String',size);
%          plot(bb(2),bb(4),'-m+')
%          b2=text(bb(1)+15,bb(3), strcat('X2: ', num2str(round(bb(1))), '    Y2: ', num2str(round(bb(3)))));
%          b3=text(bb(2),bb(4)+15, strcat('X3: ', num2str(round(bb(2))), '    Y3: ', num2str(round(bb(4)))));
%         set(b2, 'FontName', 'Arial', 'FontWeight', 'bold', 'FontSize', 12, 'Color', 'red');
%         set(b3, 'FontName', 'Arial', 'FontWeight', 'bold', 'FontSize', 12, 'Color', 'red');
        %%
        rip=strcat(num2str(length(stats)));
        bk=strcat('Total ripe tomato:',num2str(length(stats)));
        b=text(224,15,bk);
        set(b, 'FontName', 'Arial', 'FontWeight', 'bold', 'FontSize', 12, 'Color', 'red');
         set(total_show,'String',rip);
          set(location_show,'String',location);
    end
    
    hold off
    flushdata(vid);
end
% Both the loops end here.

% Stop the video aquisition.
stop(vid);

% Flush all the image data stored in the memory buffer.
flushdata(vid);
cla(Live,'reset') 
set(Live,'xtick',[],'ytick',[])  % Get rid of ticks.
 set(Live,'Visible','off'); 
end
function Capture_call(hObject, eventdata, handles)
cla(Display,'reset')
global id es_web_ext
handles.es_web_ext=es_web_ext;
handles.id=id;
if es_web_ext==0
    formato='YUY2_640x480';
else
    formato='YUY2_720x480';
end
try
    % Create video object
    vid = videoinput('winvideo',id,formato);
catch
    msgbox('Check the connection of the camera','Camera')
end
vid.FramesPerTrigger = 1;
vid.ReturnedColorspace = 'rgb';
triggerconfig(vid, 'manual');
vidRes = get(vid, 'VideoResolution');
imWidth = vidRes(1);
imHeight = vidRes(2);
nBands = get(vid, 'NumberOfBands');
hImage = image(zeros(imHeight, imWidth, nBands), 'parent',Live)       %#ok<NOPRT>
preview(vid, hImage);
set(Live,'xtick',[],'ytick',[])  % Get rid of ticks.
axis(Live, 'off')
 set(Live,'Visible','off');
start(vid); 
% pause for 3 seconds to give our webcam a "warm-up" time
pause(.5); 
% do capture!
trigger(vid);
% stop the preview
% get the captured image data and save it on capt1 variable
capt1 = getdata(vid);
% now write capt1 into file named captured.png
imwrite(capt1, 'captured.png');
img=imread('captured.png');
  cla(Display,'reset')      
 image(img,'Parent',Display);
 set(Display,'Visible','off'); 
closepreview
cla(Live,'reset') 
set(Live,'xtick',[],'ytick',[])  % Get rid of ticks.
 set(Live,'Visible','off'); 
end
function prosseced_image (hObject, eventdata, handles)
ab=0;
cla(Display,'reset')  
Display= axes('Parent',Display_p,'units','pixels',...
            'position',[1 50 448 320]);      
img=imread('captured.png');
img_p = rgb2gray(img);      
 image(img_p,'Parent',Display);           
 set(Display,'Visible','off'); 
end
function Stop_video (hObject, eventdata, handles) 
ab=0;      
cla(Live,'reset') 
set(Live,'xtick',[],'ytick',[])  % Get rid of ticks.
 set(Live,'Visible','off'); 

end
function semi_auto_call (hObject, eventdata, handles) 
set( findall(hand_control, '-property', 'Enable'), 'Enable', 'on')
set( findall(Robot_control, '-property', 'Enable'), 'Enable', 'off')
end
function auto_call (hObject, eventdata, handles)  
set( findall(Robot_control, '-property', 'Enable'), 'Enable', 'off')
set( findall(hand_control, '-property', 'Enable'), 'Enable', 'off')
end
function manual_call (hObject, eventdata, handles)  
set( findall(Robot_control, '-property', 'Enable'), 'Enable', 'on')
set( findall(hand_control, '-property', 'Enable'), 'Enable', 'on')
end
function exit (hObject, eventdata, handles) 
ab=0;
stop(DATA);
delete(DATA);
stop(tmr);
delete(tmr);
fclose(s);
close all;
clear all;
end
function temp(hObject, eventdata, handles)
cla(Display,'reset')
Display_p= uipanel('Title','Display','FontSize',10,...
             'unit','pix',...  
             'Position',[550 280 465 370]);
Display= axes('Parent',Display_p,'units','pixels',...
            'position',[50 80 390 250]);
set(Display,'xtick',[],'ytick',[])  % Get rid of ticks.
tempt = fopen('Temperature0.txt','rt');
header = textscan(tempt,'%s %s %s ',1);  %#ok<NASGU>
data = textscan(tempt,'%s %s %s ');
data = cellfun(@(x) strrep(x,',','.'),data,'UniformOutput',false);
clean_data(:,1) = arrayfun(@(x) datenum([data{1}{x} ' ' data{2}{x}]), 1:length(data{1}) )';
clean_data(:,2) = cell2mat(cellfun(@str2num , [data{3}],'UniformOutput',false));
fclose(tempt);
datestr(clean_data(:,1))
clean_data(:,2)
plot(clean_data(:,1),clean_data(:,2),'Parent',Display)
datetick         
 set(Display,'Visible','on'); 
 title('Temperature')
xlabel('Time in Hour')
ylabel('temperature in C')
end
function soil_call(hObject, eventdata, handles)
cla(Display,'reset')
Display_p= uipanel('Title','Display','FontSize',10,...
             'unit','pix',...  
             'Position',[550 280 465 370]);
Display= axes('Parent',Display_p,'units','pixels',...
            'position',[50 80 390 250]);
set(Display,'xtick',[],'ytick',[])  % Get rid of ticks.
fid = fopen('Humidity.txt','rt');
header = textscan(fid,'%s %s %s ',1);  %#ok<NASGU>
data = textscan(fid,'%s %s %s ');
data = cellfun(@(x) strrep(x,',','.'),data,'UniformOutput',false);
clean_data(:,1) = arrayfun(@(x) datenum([data{1}{x} ' ' data{2}{x}]), 1:length(data{1}) )';
clean_data(:,2) = cell2mat(cellfun(@str2num , [data{3}],'UniformOutput',false));
fclose(fid);
datestr(clean_data(:,1))
clean_data(:,2)
plot(clean_data(:,1),clean_data(:,2),'Parent',Display)
datetick         
 set(Display,'Visible','on'); 
 title('Temperature')
xlabel('Time in Hour')
ylabel('Soil moistur')
end
function hu(hObject, eventdata, handles)
cla(Display,'reset')
Display_p= uipanel('Title','Display','FontSize',10,...
             'unit','pix',...  
             'Position',[550 280 465 370]);
Display= axes('Parent',Display_p,'units','pixels',...
            'position',[50 80 390 250]);
set(Display,'xtick',[],'ytick',[])  % Get rid of ticks.
humt = fopen('Humidity0.txt','rt');
header = textscan(humt,'%s %s %s ',1);  %#ok<NASGU>
data = textscan(humt,'%s %s %s ');
data = cellfun(@(x) strrep(x,',','.'),data,'UniformOutput',false);
clean_data(:,1) = arrayfun(@(x) datenum([data{1}{x} ' ' data{2}{x}]), 1:length(data{1}) )';
clean_data(:,2) = cell2mat(cellfun(@str2num , [data{3}],'UniformOutput',false));
fclose(humt);
datestr(clean_data(:,1))
clean_data(:,2)
plot(clean_data(:,1),clean_data(:,2),'Parent',Display)
datetick         
 set(Display,'Visible','on'); 
 title('Humidity')
xlabel('Time in Hour')
ylabel('Humidity in %')
end
function robofor(hObject, eventdata, handles)
fprintf(s,'%s\n','F')
end
function robostop(hObject, eventdata, handles)
fprintf(s,'%s\n','S')
end
function roborev(hObject, eventdata, handles)
fprintf(s,'%s\n','R')
end
function roborig(hObject, eventdata, handles)
fprintf(s,'%s\n','K')
end
function robolef(hObject, eventdata, handles)
fprintf(s,'%s\n','L')
end
end